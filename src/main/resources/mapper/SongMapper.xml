<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wang.music.dao.SongMapper">
    <resultMap id="BaseResultMap" type="com.wang.music.domain.Song">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"></result>
        <result column="singer_id" jdbcType="INTEGER" property="singerId"></result>
        <result column="pic" jdbcType="VARCHAR" property="pic"></result>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"></result>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"></result>
        <result column="location" jdbcType="VARCHAR" property="location"></result>
        <result column="introduction" jdbcType="VARCHAR" property="introduction"></result>
        <result column="url" jdbcType="VARCHAR" property="url"></result>
    </resultMap>

    <resultMap id="ResultMapWithBlobs" type="com.wang.music.domain.Song" extends="BaseResultMap">
        <result column="lyric" jdbcType="LONGVARCHAR" property="lyric"></result>
    </resultMap>

    <sql id="Base_Column_List">
        id,singer_id,name,introduction,create_time,update_time,pic,url
    </sql>
    <sql id="Blob_Column_List">
        id,singer_id,name,introduction,create_time,update_time,pic,lyric,url
    </sql>

    <insert id="insertSong" parameterType="com.wang.music.domain.Song">
        insert into song
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="singerId != null">
                singer_id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="introduction != null">
                introduction,
            </if>
            create_time,update_time,
            <if test="pic != null">
                pic,
            </if>
            <if test="lyric != null">
                lyric,
            </if>
            <if test="url != null">
                url,
            </if>
        </trim>
        <trim prefix="value(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="singerId != null">
                #{singerId},
            </if>
            <if test="name != null">
                #{name},
            </if>
            <if test="introduction != null">
                #{introduction},
            </if>
            now(),now(),
            <if test="pic != null">
                #{pic},
            </if>
            <if test="lyric != null">
                #{lyric},
            </if>
            <if test="url != null">
                #{url},
            </if>
        </trim>
    </insert>

    <update id="updateSong" parameterType="com.wang.music.domain.Song">
        update song
        <set>
            <if test="id != null">
                id=#{id},
            </if>
            <if test="singerId != null">
                sing_id=#{singId},
            </if>
            <if test="name != null">
                name=#{name},
            </if>
            <if test="introduction != null">
                introduction=#{introduction},
            </if>
            update_time=now(),
            <if test="pic != null">
                pic=#{pic},
            </if>
            <if test="lyric != null">
                lyric=#{lyric},
            </if>
            <if test="url != null">
                url=#{url},
            </if>
        </set>
        where id=#{id}
    </update>

    <delete id="deleteSong" parameterType="java.lang.Integer">
        delete from song where id=#{id}
    </delete>

    <select id="selectSongById" parameterType="java.lang.Integer"  resultMap="ResultMapWithBlobs">
        select <include refid="Blob_Column_List"/>
        from song where id=#{id}
    </select>

    <select id="selectSongBySongName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from song
        where name = #{name}
    </select>

    <select id="selectAllSong" resultMap="BaseResultMap">
        select <include refid="Blob_Column_List"/> from song
    </select>

    <select id="likeSongByName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select <include refid="Blob_Column_List"/> from song
        where name like #{name}
    </select>

    <select id="selectSongBySingerId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select <include refid="Blob_Column_List"/> from song
        where singer_id=#{singId}
    </select>
</mapper>